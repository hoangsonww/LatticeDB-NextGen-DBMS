# Prometheus configuration for HashiCorp Stack and LatticeDB monitoring
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'latticedb'
    environment: 'production'

rule_files:
  - "alerts/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Consul metrics
  - job_name: 'consul'
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        services: ['consul']
    metrics_path: '/v1/agent/metrics'
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: job
      - source_labels: [__meta_consul_node]
        target_label: instance
      - source_labels: [__meta_consul_datacenter]
        target_label: datacenter
      - source_labels: [__meta_consul_service_metadata_prometheus_port]
        target_label: __address__
        regex: '(.+)'
        replacement: '${1}:8500'

  # Nomad metrics
  - job_name: 'nomad'
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        services: ['nomad']
    metrics_path: '/v1/metrics'
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: job
      - source_labels: [__meta_consul_node]
        target_label: instance
      - source_labels: [__meta_consul_datacenter]
        target_label: datacenter
      - source_labels: [__meta_consul_service_port]
        target_label: __address__
        regex: '(.+)'
        replacement: '${1}:4646'

  # Vault metrics
  - job_name: 'vault'
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        services: ['vault']
    metrics_path: '/v1/sys/metrics'
    params:
      format: ['prometheus']
    bearer_token_file: '/etc/prometheus/vault-token'
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: job
      - source_labels: [__meta_consul_node]
        target_label: instance
      - source_labels: [__meta_consul_datacenter]
        target_label: datacenter
      - source_labels: [__meta_consul_service_port]
        target_label: __address__
        regex: '(.+)'
        replacement: '${1}:8200'

  # LatticeDB application metrics
  - job_name: 'latticedb'
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        services: ['latticedb']
    metrics_path: '/metrics'
    scrape_interval: 10s
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: job
      - source_labels: [__meta_consul_node]
        target_label: instance
      - source_labels: [__meta_consul_datacenter]
        target_label: datacenter
      - source_labels: [__meta_consul_service_id]
        target_label: service_id
      - source_labels: [__meta_consul_service_metadata_version]
        target_label: version
      - source_labels: [__meta_consul_service_metadata_environment]
        target_label: environment
      - source_labels: [__meta_consul_service_port]
        target_label: __address__
        regex: '(.+)'
        replacement: '${1}:8080'

  # Envoy proxy metrics (Consul Connect)
  - job_name: 'envoy-proxy'
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        services: ['latticedb-sidecar-proxy']
    metrics_path: '/stats/prometheus'
    scrape_interval: 10s
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: job
      - source_labels: [__meta_consul_node]
        target_label: instance
      - source_labels: [__meta_consul_service_id]
        target_label: proxy_id
      - source_labels: [__meta_consul_service_metadata_local_service_id]
        target_label: local_service
      - source_labels: [__meta_consul_service_port]
        target_label: __address__
        regex: '(.+)'
        replacement: '${1}:19000'

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        services: ['node-exporter']
    relabel_configs:
      - source_labels: [__meta_consul_node]
        target_label: instance
      - source_labels: [__meta_consul_datacenter]
        target_label: datacenter

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        services: ['cadvisor']
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__meta_consul_node]
        target_label: instance
      - source_labels: [__meta_consul_datacenter]
        target_label: datacenter

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        services: ['latticedb']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
        replacement: 'http://${1}/health'
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Custom metrics from Consul KV
  - job_name: 'consul-kv-metrics'
    static_configs:
      - targets: ['consul-exporter:9107']
    scrape_interval: 30s

  # Application-specific metrics collection
  - job_name: 'latticedb-custom'
    honor_labels: true
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        services: ['latticedb']
    metrics_path: '/api/v1/metrics'
    params:
      format: ['prometheus']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__meta_consul_service_metadata_custom_metrics]
        regex: 'true'
        action: keep
      - source_labels: [__meta_consul_service_port]
        target_label: __address__
        regex: '(.+)'
        replacement: '${1}:8080'

# Recording rules for common queries
recording_rules:
  - name: latticedb.rules
    rules:
      - record: latticedb:request_rate
        expr: rate(http_requests_total{job="latticedb"}[5m])

      - record: latticedb:error_rate
        expr: rate(http_requests_total{job="latticedb",status=~"5.."}[5m])

      - record: latticedb:response_time_p95
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="latticedb"}[5m]))

      - record: latticedb:cpu_usage
        expr: rate(container_cpu_usage_seconds_total{name=~".*latticedb.*"}[5m])

      - record: latticedb:memory_usage
        expr: container_memory_usage_bytes{name=~".*latticedb.*"}

  - name: consul.rules
    rules:
      - record: consul:service_health
        expr: consul_health_service_status{status="passing"}

      - record: consul:raft_leader_changes
        expr: increase(consul_raft_leader_transitions_total[1h])

      - record: consul:rpc_request_rate
        expr: rate(consul_rpc_requests_total[5m])

  - name: nomad.rules
    rules:
      - record: nomad:job_running_allocations
        expr: nomad_nomad_job_summary_running

      - record: nomad:node_resource_utilization
        expr: (nomad_client_allocated_cpu / nomad_client_host_cpu_total) * 100

      - record: nomad:allocation_restart_rate
        expr: rate(nomad_nomad_job_summary_failed[5m])

  - name: vault.rules
    rules:
      - record: vault:request_rate
        expr: rate(vault_core_handle_request{method!="GET",path!~"/v1/sys/health.*"}[5m])

      - record: vault:seal_status
        expr: vault_core_sealed

      - record: vault:token_creation_rate
        expr: rate(vault_token_creation[5m])